{"name":"scenario","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/html; charset=UTF-8'.","trace":"java.lang.IllegalStateException: Cannot parse object because no supported Content-Type was specified in response. Content-Type was 'text/html; charset=UTF-8'.\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\n\tat io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:89)\n\tat io.restassured.internal.mapping.ObjectMapping$deserialize.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:224)\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)\n\tat com.tfl.api.service.EmployeeService.getAllEmployess(EmployeeService.java:27)\n\tat com.tfl.glue.TflStepDefs.test(TflStepDefs.java:34)\n\tat âœ½.Test(file:src/test/resources/features/Bikes.feature:9)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg1","value":"\"Fetching bike points\""},{"name":"arg0","value":"\"Get all bike points contains River Street , Clerkenwell\""}],"start":1579340595843,"stop":1579340617360,"uuid":"b268459c-94b9-482f-a62d-7704ca54715c","historyId":"ce1496bde8825f64f1627382aa6423e0","fullName":"com.APITestRunner.scenario","labels":[{"name":"package","value":"com.APITestRunner"},{"name":"testClass","value":"com.APITestRunner"},{"name":"testMethod","value":"scenario"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"Frameworkium-BDD"},{"name":"subSuite","value":"com.APITestRunner"},{"name":"host","value":"MacBook-Pro-Marek.local"},{"name":"thread","value":"7496@MacBook-Pro-Marek.local.TestNG-PoolService-1(16)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[]}