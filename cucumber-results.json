[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-01-18T15:22:31.350Z",
        "line": 10,
        "name": "Get employees by specific id",
        "description": "",
        "id": "employess-info;get-employees-by-specific-id;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2354596571,
              "status": "passed"
            },
            "line": 5,
            "name": "User request user by id \"5\"",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 25
                }
              ],
              "location": "EmployeeStepDefs.userRequestUserById(Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 424382809,
              "status": "passed"
            },
            "line": 6,
            "name": "It should be equal to \"Charles\" and \"Morris\"",
            "match": {
              "arguments": [
                {
                  "val": "Charles",
                  "offset": 23
                },
                {
                  "val": "Morris",
                  "offset": 37
                }
              ],
              "location": "EmployeeStepDefs.itShouldBeEqualToAnd(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@api"
          }
        ]
      },
      {
        "start_timestamp": "2020-01-18T15:22:31.350Z",
        "line": 11,
        "name": "Get employees by specific id",
        "description": "",
        "id": "employess-info;get-employees-by-specific-id;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2354592366,
              "status": "passed"
            },
            "line": 5,
            "name": "User request user by id \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 25
                }
              ],
              "location": "EmployeeStepDefs.userRequestUserById(Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 420136899,
              "status": "passed"
            },
            "line": 6,
            "name": "It should be equal to \"Janet\" and \"Weaver\"",
            "match": {
              "arguments": [
                {
                  "val": "Janet",
                  "offset": 23
                },
                {
                  "val": "Weaver",
                  "offset": 35
                }
              ],
              "location": "EmployeeStepDefs.itShouldBeEqualToAnd(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@api"
          }
        ]
      },
      {
        "start_timestamp": "2020-01-18T15:22:31.350Z",
        "line": 14,
        "name": "Create employee",
        "description": "",
        "id": "employess-info;create-employee",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2764942594,
              "status": "passed"
            },
            "line": 15,
            "name": "User provides employee data \"John\" \"Programmer\"",
            "match": {
              "arguments": [
                {
                  "val": "John",
                  "offset": 29
                },
                {
                  "val": "Programmer",
                  "offset": 36
                }
              ],
              "location": "EmployeeStepDefs.userProvidesEmployeeData(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c404\u003e.\n\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$10.call(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)\n\tat io.restassured.specification.ResponseSpecification$statusCode$4.callCurrent(Unknown Source)\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\n\tat com.tfl.api.service.EmployeeService.getEmployeeById(EmployeeService.java:26)\n\tat com.tfl.glue.EmployeeStepDefs.itShouldBeSucessfullyCreatedAndContainData(EmployeeStepDefs.java:35)\n\tat âœ½.It should be sucessfully created and contain \"John\" \"Programmer\" data(file:src/test/resources/features/Employee.feature:16)\n",
              "duration": 469571153,
              "status": "failed"
            },
            "line": 16,
            "name": "It should be sucessfully created and contain \"John\" \"Programmer\" data",
            "match": {
              "arguments": [
                {
                  "val": "John",
                  "offset": 46
                },
                {
                  "val": "Programmer",
                  "offset": 53
                }
              ],
              "location": "EmployeeStepDefs.itShouldBeSucessfullyCreatedAndContainData(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@api"
          }
        ]
      },
      {
        "start_timestamp": "2020-01-18T15:22:31.350Z",
        "line": 20,
        "name": "Remove employee",
        "description": "",
        "id": "employess-info;remove-employee",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2236817283,
              "status": "passed"
            },
            "line": 21,
            "name": "User try to remove user by id \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 31
                }
              ],
              "location": "EmployeeStepDefs.userTryToRemoveUserById(Integer)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37043449,
              "status": "passed"
            },
            "line": 22,
            "name": "Response should return \"204\" status code",
            "match": {
              "arguments": [
                {
                  "val": "204",
                  "offset": 24
                }
              ],
              "location": "EmployeeStepDefs.responseShouldReturnStatusCode(Integer)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@api"
          }
        ]
      }
    ],
    "name": "Employess info",
    "description": "",
    "id": "employess-info",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/Employee.feature",
    "tags": []
  }
]